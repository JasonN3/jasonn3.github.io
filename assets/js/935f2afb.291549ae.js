"use strict";(self.webpackChunkblogs=self.webpackChunkblogs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Red Hat","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Active Directory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Join AD","href":"/docs/RHEL/active-directory/join-ad","docId":"RHEL/active-directory/join-ad"}],"href":"/docs/category/active-directory"}],"href":"/docs/category/red-hat"}]},"docs":{"RHEL/active-directory/join-ad":{"id":"RHEL/active-directory/join-ad","title":"Joining RHEL or any other Linux machine directly to Microsoft Active Directory","description":"Managing access to Linux systems is always a challenge. I\'ve seen some people create all of their user\'s on all of their machines, others that will share accounts either through SSH keys or passwords, and others that will use LDAP binding (sometimes using the existing AD infrastructure and sometimes using a separate domain) that required them to write LDAP queries to filter access. All of these methods make managing access to machines difficult, require the administrators to be informed when someone is joining or leaves a team, and sometimes makes logging useless (shared accounts). I\'m sure I\'m also not alone in having a bad experience with HR informing the technical teams when there is a change to teams. However, there\'s a way I\'ve found that works well and integrates with what is typically a pre-existing process.","sidebar":"tutorialSidebar"}}}')}}]);